// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Traverser findArray 1`] = `
[
  "[
        {
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        },
        {
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
        {
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
      ]",
  "[100, 50, 20, 10]",
]
`;

exports[`Traverser findDefaultExport 1`] = `
"export default () => {
  // 自定义电量颜色分配规则
  const calcColor = (top, highColor, middleColor, lowColor) => {
    // 0-10%: 红色   10%-60%: 黑色    60%-100%: 绿色
    if (top <= 8.4 && top >= 3) {
      return highColor
    }
    if (top <= 15.6 && top > 8.4) {
      return middleColor
    }
    return lowColor
  }

  return (
    <ListView
      contentPadding={false}
      list={[
        {
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        },
        {
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
        {
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
      ]}
    />
  )
}"
`;

exports[`Traverser findJsxAttribute 1`] = `
[
  "contentPadding={false}",
  "list={[
        {
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        },
        {
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
        {
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
      ]}",
  "style={{
                flex: 1,
                flexDirection: 'row',
              }}",
  "key={val}",
  "style={{ flexGrow: 1 }}",
  "value={val}",
  "value={100}",
  "theme={{ batteryColor: '#FF4800' }}",
  "value={100}",
  "onCalcColor={calcColor}",
  "highColor="#999"",
]
`;

exports[`Traverser findJsxAttribute AllProp 1`] = `
[
  "list={[
        {
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        },
        {
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
        {
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
      ]}",
  "style={{
                flex: 1,
                flexDirection: 'row',
              }}",
  "key={val}",
  "style={{ flexGrow: 1 }}",
  "value={val}",
  "value={100}",
  "theme={{ batteryColor: '#FF4800' }}",
  "value={100}",
  "onCalcColor={calcColor}",
  "highColor="#999"",
]
`;

exports[`Traverser findJsxElementByTagName 1`] = `
[
  "<ListView
      contentPadding={false}
      list={[
        {
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        },
        {
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
        {
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
      ]}
    />",
]
`;

exports[`Traverser findObject 1`] = `
[
  "{
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        }",
  "{
            marginTop: cx(24),
          }",
  "{
                flex: 1,
                flexDirection: 'row',
              }",
  "{ flexGrow: 1 }",
  "{
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        }",
  "{ batteryColor: '#FF4800' }",
  "{
            width: cx(86),
            marginTop: cx(24),
          }",
  "{
            marginTop: cx(20),
          }",
  "{
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        }",
  "{
            width: cx(86),
            marginTop: cx(24),
          }",
  "{
            marginTop: cx(20),
          }",
]
`;

exports[`Traverser findPropAssign 1`] = `
[
  "title: Strings.getLang('style_basic')",
  "contentStyle: {
            marginTop: cx(24),
          }",
  "marginTop: cx(24)",
  "content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          )",
  "flex: 1",
  "flexDirection: 'row'",
  "flexGrow: 1",
  "title: Strings.getLang('battery_power_cus2')",
  "content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />",
  "batteryColor: '#FF4800'",
  "contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          }",
  "width: cx(86)",
  "marginTop: cx(24)",
  "itemStyle: {
            marginTop: cx(20),
          }",
  "marginTop: cx(20)",
  "title: Strings.getLang('battery_power_mod2')",
  "content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          )",
  "contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          }",
  "width: cx(86)",
  "marginTop: cx(24)",
  "itemStyle: {
            marginTop: cx(20),
          }",
  "marginTop: cx(20)",
]
`;

exports[`Traverser findReturnJsx 1`] = `
[
  "return highColor",
  "return middleColor",
  "return lowColor",
  "return (
    <ListView
      contentPadding={false}
      list={[
        {
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        },
        {
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
        {
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
      ]}
    />
  )",
]
`;

exports[`Traverser findSelector 1`] = `
[
  "<ListView
      contentPadding={false}
      list={[
        {
          title: Strings.getLang('style_basic'),
          contentStyle: {
            marginTop: cx(24),
          },
          content: (
            <View
              style={{
                flex: 1,
                flexDirection: 'row',
              }}
            >
              {[100, 50, 20, 10].map((val, i) => (
                <View key={val} style={{ flexGrow: 1 }}>
                  <Battery value={val} />
                </View>
              ))}
            </View>
          ),
        },
        {
          title: Strings.getLang('battery_power_cus2'),
          content: <Battery value={100} theme={{ batteryColor: '#FF4800' }} />,
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
        {
          title: Strings.getLang('battery_power_mod2'),
          content: (
            <Battery value={100} onCalcColor={calcColor} highColor="#999" />
          ),
          contentStyle: {
            width: cx(86),
            marginTop: cx(24),
          },
          itemStyle: {
            marginTop: cx(20),
          },
        },
      ]}
    />",
  "<Battery value={val} />",
  "<Battery value={100} theme={{ batteryColor: '#FF4800' }} />",
  "<Battery value={100} onCalcColor={calcColor} highColor="#999" />",
]
`;
